/*
 * This file is generated by jOOQ.
 */
package generated_jooq.tables.records;


import generated_jooq.tables.Role;
import generated_jooq.tables.interfaces.IRole;

import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 全局配置表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record4<Long, Long, String, Long>, IRole {

    private static final long serialVersionUID = -1775758778;

    /**
     * Setter for <code>jooq_flyway.role.id</code>. 主键ID
     */
    @Override
    public RoleRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_flyway.role.id</code>. 主键ID
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq_flyway.role.user_id</code>. 用户ID
     */
    @Override
    public RoleRecord setUserId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_flyway.role.user_id</code>. 用户ID
     */
    @Override
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>jooq_flyway.role.role_name</code>. 角色名称
     */
    @Override
    public RoleRecord setRoleName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_flyway.role.role_name</code>. 角色名称
     */
    @Size(max = 64)
    @Override
    public String getRoleName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_flyway.role.create_at</code>. 创建时间
     */
    @Override
    public RoleRecord setCreateAt(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_flyway.role.create_at</code>. 创建时间
     */
    @Override
    public Long getCreateAt() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Role.ROLE.ID;
    }

    @Override
    public Field<Long> field2() {
        return Role.ROLE.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Role.ROLE.ROLE_NAME;
    }

    @Override
    public Field<Long> field4() {
        return Role.ROLE.CREATE_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getRoleName();
    }

    @Override
    public Long component4() {
        return getCreateAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getRoleName();
    }

    @Override
    public Long value4() {
        return getCreateAt();
    }

    @Override
    public RoleRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RoleRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public RoleRecord value3(String value) {
        setRoleName(value);
        return this;
    }

    @Override
    public RoleRecord value4(Long value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public RoleRecord values(Long value1, Long value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRole from) {
        setId(from.getId());
        setUserId(from.getUserId());
        setRoleName(from.getRoleName());
        setCreateAt(from.getCreateAt());
    }

    @Override
    public <E extends IRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(Long id, Long userId, String roleName, Long createAt) {
        super(Role.ROLE);

        set(0, id);
        set(1, userId);
        set(2, roleName);
        set(3, createAt);
    }
}
